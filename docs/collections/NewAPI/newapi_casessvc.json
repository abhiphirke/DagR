{
  "openapi": "3.0.1",
  "info": {
    "title": "Case API",
    "description": "Case API performs Nova case operations and exposes the basic and core case information.",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/tieto/collection/casesvc"
    }
  ],
  "paths": {
    "/Cases/{caseNo}": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get core information about a specific case using Nova Case number",
        "parameters": [
          {
            "name": "caseNo",
            "in": "path",
            "description": "Nova case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core case information for the specified Nova debtor number.  (Nova.DTO.Case.CaseCoreInfoDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CaseCoreInfoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseCoreInfoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CaseCoreInfoDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Cases/{caseNo}/parties": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get list of parties for a specific case.",
        "parameters": [
          {
            "name": "caseNo",
            "in": "path",
            "description": "Nova case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the parties information for the specified Nova case number.  (Nova.DTO.Party.PartyDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Cases/{caseNo}/mergedcases": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get list of merged cases for a specific case.",
        "parameters": [
          {
            "name": "caseNo",
            "in": "path",
            "description": "Nova case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the merged cases information for the specified Nova case number.  (Nova.DTO.Case.CaseDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Cases/{caseNo}/jointcase": {
      "get": {
        "tags": [
          "Cases"
        ],
        "summary": "Get joint case for a specific case.",
        "parameters": [
          {
            "name": "caseNo",
            "in": "path",
            "description": "Nova case number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the joint case information for the specified Nova case number.  (Nova.DTO.Case.JointCaseDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JointCaseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JointCaseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JointCaseDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/cases": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Get the list of cases number and specification of a debtor using Nova Debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of case number and specification information for the specified Nova debtor number.  (Nova.DTO.Case.CaseCoreInfoDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/cases/coreinfo": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Get the list of cases core information of a debtor using Nova Debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core case information for the specified Nova debtor number.  (Nova.DTO.Case.CaseCoreInfoDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseCoreInfoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseCoreInfoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseCoreInfoDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CaseStateDTO": {
        "enum": [
          "invoicing",
          "debtcollection",
          "debtsurveillance"
        ],
        "type": "string",
        "description": "Provides state of a case"
      },
      "RegistrationDTO": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of registration",
            "format": "date-time",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "User who registered it",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides information about registration of an entity/object."
      },
      "CaseClosureDTO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Closure code as configured within Nova settings",
            "nullable": true
          },
          "codeDescription": {
            "type": "string",
            "description": "Closure code description as configured within Nova settings",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date of closure",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Provides information about closure details of a case"
      },
      "CaseSpecificationDTO": {
        "enum": [
          "normal",
          "merged",
          "joint"
        ],
        "type": "string",
        "description": "Provides information about specification of case."
      },
      "ExternalIdentifierDTO": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "string",
            "description": "Id1",
            "nullable": true
          },
          "id2": {
            "type": "string",
            "description": "Id2",
            "nullable": true
          },
          "id3": {
            "type": "string",
            "description": "Id3",
            "nullable": true
          },
          "id4": {
            "type": "string",
            "description": "Id4",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides more identification information of an entity typically used in other integrating/older/authority systems."
      },
      "CaseCoreInfoDTO": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/CaseStateDTO"
          },
          "registration": {
            "$ref": "#/components/schemas/RegistrationDTO"
          },
          "closed": {
            "type": "boolean",
            "description": "Indicates whether a case is closed or active. True if case is closed."
          },
          "closureDetails": {
            "$ref": "#/components/schemas/CaseClosureDTO"
          },
          "id": {
            "type": "integer",
            "description": "Unique (within Nova) Id of a case",
            "format": "int32"
          },
          "specification": {
            "$ref": "#/components/schemas/CaseSpecificationDTO"
          },
          "external": {
            "$ref": "#/components/schemas/ExternalIdentifierDTO"
          }
        },
        "additionalProperties": false,
        "description": "Provides core information about a case"
      },
      "ResourceSpecificationDTO": {
        "enum": [
          "case",
          "solicitor",
          "creditor",
          "debtor",
          "pledge",
          "payment",
          "amortisationplan",
          "partner",
          "document",
          "collateral",
          "collateralaccount",
          "mandate",
          "collector",
          "lawyer",
          "instance",
          "claim",
          "invoice",
          "creditinvoice",
          "fee",
          "debtorcost",
          "history"
        ],
        "type": "string",
        "description": "ResourceSpecificationDTO."
      },
      "ReferenceIdentifierDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identification number",
            "format": "int32"
          },
          "specification": {
            "$ref": "#/components/schemas/ResourceSpecificationDTO"
          }
        },
        "additionalProperties": false,
        "description": "Unique identification for the reference types (that cannot be identified by an unique identification number) within Nova."
      },
      "PartyDTO": {
        "type": "object",
        "properties": {
          "reference": {
            "$ref": "#/components/schemas/ReferenceIdentifierDTO"
          },
          "subReference": {
            "$ref": "#/components/schemas/ReferenceIdentifierDTO"
          },
          "role": {
            "type": "string",
            "description": "Role of the entity (party) in the associated case",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information about different entities associated with a case"
      },
      "CaseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique (within Nova) Id of a case",
            "format": "int32"
          },
          "specification": {
            "$ref": "#/components/schemas/CaseSpecificationDTO"
          },
          "external": {
            "$ref": "#/components/schemas/ExternalIdentifierDTO"
          }
        },
        "additionalProperties": false,
        "description": "Provides case identification number and specifications information."
      },
      "JointCaseDTO": {
        "type": "object",
        "properties": {
          "mergedCases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceIdentifierDTO"
            },
            "description": "List of cases merged under this joint case. Refer: Nova.DTO.Common.Identifiers.ReferenceIdentifierDTO",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique (within Nova) Id of a case",
            "format": "int32"
          },
          "specification": {
            "$ref": "#/components/schemas/CaseSpecificationDTO"
          },
          "external": {
            "$ref": "#/components/schemas/ExternalIdentifierDTO"
          }
        },
        "additionalProperties": false,
        "description": "Provides subcase information if a case is merged into a joint case."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}