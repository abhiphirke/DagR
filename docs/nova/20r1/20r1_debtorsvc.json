{
  "openapi": "3.0.1",
  "info": {
    "title": "Debtor API Service",
    "description": "Debtor service expose operations on the Nova debtor object. <br><br>The debtor object is expressed as a party of type natural person (a human being) or legal person (e.g. an organisation or a company not represented as a person). A debtor's role in relation to case or claims is not expressed at the debtor object.",
    "version": "1.0.0.0"
  },
  "servers": [
    {
      "url": "/tieto/collection/DebtorSvc"
    }
  ],
  "paths": {
    "/Debtors/{debtorNo}/coreinfo": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Return information of a debtor.",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information. (Nova.DTO.Debtor.DebtorCoreInfoDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/idno/{debtorId}/coreinfo": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Find debtors by national identification number.",
        "parameters": [
          {
            "name": "debtorId",
            "in": "path",
            "description": "National identification number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the basic debtor information (name and Nova debtor Id) for the specified debtor Id number",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/naturalperson": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns Natural person information using Nova debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information (name, postal address, contact information, registration, and statistics information) for the specified Nova debtor number",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NaturalPersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NaturalPersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NaturalPersonDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/legalperson": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns Natural person information using Nova debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information (name, postal address, contact information, registration, and statistics information) for the specified Nova debtor number",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LegalPersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalPersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalPersonDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/postaladdress": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns Natural person information using Nova debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information (name, postal address, contact information, registration, and statistics information) for the specified Nova debtor number",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorPostalAddressDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorPostalAddressDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorPostalAddressDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/contactinfo": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns Natural person information using Nova debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information (name, postal address, contact information, registration, and statistics information) for the specified Nova debtor number",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorContactInfoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorContactInfoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorContactInfoDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/staticstics": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns Natural person information using Nova debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information (name, postal address, contact information, registration, and statistics information) for the specified Nova debtor number",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorStatisticsDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorStatisticsDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorStatisticsDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/otherinfo": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns Natural person information using Nova debtor number",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information (name, postal address, contact information, registration, and statistics information) for the specified Nova debtor number",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorOtherInfoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorOtherInfoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorOtherInfoDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/list": {
      "post": {
        "tags": [
          "Debtors"
        ],
        "summary": "Finds debtor using Nova debtor number",
        "requestBody": {
          "description": "Nova debtor numbers",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the core debtor information. (Nova.DTO.Debtor.DebtorCoreInfoDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Finds debtor using Nova debtor number",
        "description": "This is deprecated method. <br />\r\nRecommend you to use other URL.",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the core debtor information. (Nova.DTO.DeprecatedDTOs.DebtorDto)",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorDto"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Finds debtors using a unique personal identification number (Debtor Id)",
        "description": "This is deprecated method. <br />\r\nRecommend you to use other URL.",
        "parameters": [
          {
            "name": "debtorId",
            "in": "query",
            "description": "Debtor Id number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the basic debtor information (name and Nova debtor Id) for the specified debtor Id number",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationDTO": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Registration date.",
            "format": "date-time",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "Registered by.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Object registration."
      },
      "ExternalIdentifierDTO": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "id2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "id3": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "id4": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Object references other than the Nova unique object identifier. Elements are described in the context where DTO is being used."
      },
      "PersonTypeDTO": {
        "enum": [
          "naturalPerson",
          "legalPerson"
        ],
        "type": "string",
        "description": ""
      },
      "DebtorCoreInfoDTO": {
        "type": "object",
        "properties": {
          "registration": {
            "$ref": "#/components/schemas/RegistrationDTO"
          },
          "paymentReference": {
            "type": "string",
            "description": "Nova debtor OCR (not sequenced based).",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Nova debtor number.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "external": {
            "$ref": "#/components/schemas/ExternalIdentifierDTO"
          },
          "partyType": {
            "$ref": "#/components/schemas/PersonTypeDTO"
          }
        },
        "additionalProperties": false,
        "description": "Debtor core information."
      },
      "NaturalPersonTypeDTO": {
        "enum": [
          "natural",
          "firm"
        ],
        "type": "string",
        "description": ""
      },
      "NameExtensionsDTO": {
        "type": "object",
        "properties": {
          "initial": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "infix": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Elements of a persons name."
      },
      "NaturalPersonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Nova debtor number.",
            "format": "int32"
          },
          "idNo": {
            "type": "string",
            "description": "National identification number.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "secondaryIdNo": {
            "type": "string",
            "description": "National identification number.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/NaturalPersonTypeDTO"
          },
          "birthDate": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "nameExtensions": {
            "$ref": "#/components/schemas/NameExtensionsDTO"
          },
          "gender": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "alien": {
            "type": "boolean",
            "description": ""
          },
          "civilStatus": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "nationality": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "housingType": {
            "type": "string",
            "description": "Housing type / condition.",
            "nullable": true
          },
          "occupation": {
            "type": "string",
            "description": "Occupation / profession.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Party represented as a person (a human being)"
      },
      "LegalPersonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identification number in Nova for objects e.g. debtor, creditor.",
            "format": "int32"
          },
          "idNo": {
            "type": "string",
            "description": "National identification number.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "organisationType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "organisation": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Party represented as a legal entity (e.g. company, organisation)"
      },
      "PostalAddressRoleDTO": {
        "enum": [
          "main",
          "alternate",
          "multipleAddress"
        ],
        "type": "string",
        "description": "Specification of address role."
      },
      "PostalAddressDTO": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/PostalAddressRoleDTO"
          },
          "name": {
            "type": "string",
            "description": "Name of the party that is used with the current address and role.",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addressLine4": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "streetNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "flatNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "wrongAddress": {
            "type": "boolean",
            "description": "Indicates if the address is incorrect in relation to a party."
          },
          "wrongAddressDate": {
            "type": "string",
            "description": "Date when address was marked as wrong.",
            "format": "date-time",
            "nullable": true
          },
          "addressProtected": {
            "type": "boolean",
            "description": "Indicates if the address is protected / confidential in relation to a party."
          },
          "region": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "zipCodeExtension": {
            "type": "string",
            "description": "Used in region / country that applies a two-part zip code.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "DebtorPostalAddressDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Nova debtor number.",
            "format": "int32"
          },
          "postalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostalAddressDTO"
            },
            "description": "List of postal address associated with debtor. Refer: Nova.DTO.Common.PostalAddressDTO",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides information about a debtor role"
      },
      "ContactMediumDTO": {
        "enum": [
          "phone",
          "fax",
          "email"
        ],
        "type": "string",
        "description": "Specification of contact media."
      },
      "ContactPointRoleDTO": {
        "enum": [
          "private1",
          "private2",
          "work1",
          "work2",
          "alternate"
        ],
        "type": "string",
        "description": "Specification of contact point roles."
      },
      "ContactPointDTO": {
        "type": "object",
        "properties": {
          "medium": {
            "$ref": "#/components/schemas/ContactMediumDTO"
          },
          "id": {
            "type": "string",
            "description": "Unique identification (e.g. phone number, email address)",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/ContactPointRoleDTO"
          }
        },
        "additionalProperties": false,
        "description": "Contact points for a party (e.g. phone, email)"
      },
      "ContactPreferencesDTO": {
        "type": "object",
        "properties": {
          "doNotCall": {
            "type": "boolean",
            "description": "Indicates that communication via phone is not accepted by the party."
          },
          "doNotCallDate": {
            "type": "string",
            "description": "Date when DoNotCall flag is set",
            "format": "date-time",
            "nullable": true
          },
          "emailOk": {
            "type": "boolean",
            "description": "Indicates that communication via Email is accepted by the party."
          },
          "emailOkDate": {
            "type": "string",
            "description": "Date when EmailOk flag is set",
            "format": "date-time",
            "nullable": true
          },
          "wrongPhone": {
            "type": "boolean",
            "description": "Indicates if the phone number is incorrect in relation to the party."
          }
        },
        "additionalProperties": false,
        "description": "Contact preference information for a debtor."
      },
      "DebtorContactInfoDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identification number of debtor in Nova",
            "format": "int32"
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDTO"
            },
            "description": "List of contact points. Refer: Nova.DTO.Common.ContactPointDTO",
            "nullable": true
          },
          "contactPreferences": {
            "$ref": "#/components/schemas/ContactPreferencesDTO"
          }
        },
        "additionalProperties": false,
        "description": "Contact information of debtor."
      },
      "StatisticsCategoryDTO": {
        "enum": [
          "legal"
        ],
        "type": "string",
        "description": "Specification of statistic / aggregation categories."
      },
      "StatisticsNameDTO": {
        "enum": [
          "noOfInjunction",
          "noOfDistress"
        ],
        "type": "string",
        "description": "Specification of statistic / aggregation values."
      },
      "StatisticsDTO": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/StatisticsCategoryDTO"
          },
          "name": {
            "$ref": "#/components/schemas/StatisticsNameDTO"
          },
          "value": {
            "type": "integer",
            "description": "Value",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Statistics / Aggregation information available for an object."
      },
      "DebtorStatisticsDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Nova debtor number.",
            "format": "int32"
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsDTO"
            },
            "description": "List of statistics associated with debtor. Refer: Nova.DTO.Common.StatisticsDTO",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provides information about a debtor role"
      },
      "DebtorOtherInfoDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Nova debtor number.",
            "format": "int32"
          },
          "authorityCode": {
            "type": "string",
            "description": "Authority code (a zip code for matching with the registry of authorities within Nova.)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Additional attributes of the debtor object."
      },
      "DebtorDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Nova debtor number.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "external": {
            "$ref": "#/components/schemas/ExternalIdentifierDTO"
          },
          "partyType": {
            "$ref": "#/components/schemas/PersonTypeDTO"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ObjectTypeDto": {
        "enum": [
          "case",
          "party",
          "claim",
          "verdict",
          "payment"
        ],
        "type": "string",
        "description": "The object_type property which is part of object_identifiers"
      },
      "SpecificationDto": {
        "enum": [
          "debtor",
          "creditor",
          "invoice",
          "cost",
          "authority",
          "partner"
        ],
        "type": "string",
        "description": "The specification property which is part of object_identifiers"
      },
      "ObjectIdentifiersDto": {
        "type": "object",
        "properties": {
          "internal": {
            "type": "integer",
            "description": "Nova debtor number",
            "format": "int32"
          },
          "external1": {
            "type": "string",
            "description": "Debtor Id",
            "nullable": true
          },
          "external2": {
            "type": "string",
            "description": "Debtor Id1",
            "nullable": true
          },
          "external3": {
            "type": "string",
            "description": "Debtor Id2",
            "nullable": true
          },
          "external4": {
            "type": "string",
            "description": "New debtor Id number",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Debtor name",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "description": "Payment reference No",
            "nullable": true
          },
          "objectType": {
            "$ref": "#/components/schemas/ObjectTypeDto"
          },
          "specification": {
            "$ref": "#/components/schemas/SpecificationDto"
          }
        },
        "additionalProperties": false,
        "description": "Object Identifier model class"
      },
      "DebtorPartyTypeDto": {
        "enum": [
          "naturalPerson",
          "legalPerson"
        ],
        "type": "string",
        "description": "Type of Party:"
      },
      "PersonType": {
        "enum": [
          "natural",
          "firm"
        ],
        "type": "string",
        "description": "Type of Person:"
      },
      "NameExtensions": {
        "type": "object",
        "properties": {
          "initial": {
            "type": "string",
            "description": "Initial",
            "nullable": true
          },
          "infix": {
            "type": "string",
            "description": "Infix",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details of 'Name extension'"
      },
      "NaturalPersonDto": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "string",
            "description": "Debtor Id of the 'Natural Person'",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title of the 'Natural Person'",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Full name of the 'Natural Person'",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name of the 'Natural Person'",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the 'Natural Person'",
            "nullable": true
          },
          "secondaryIdNo": {
            "type": "string",
            "description": "New debtor Id number",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/PersonType"
          },
          "birthDate": {
            "type": "string",
            "description": "Date of birth",
            "nullable": true
          },
          "nameExtensions": {
            "$ref": "#/components/schemas/NameExtensions"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "nullable": true
          },
          "alien": {
            "type": "boolean",
            "description": "Foreigner status",
            "nullable": true
          },
          "civilStatus": {
            "type": "integer",
            "description": "Marital status",
            "format": "int32",
            "nullable": true
          },
          "nationality": {
            "type": "string",
            "description": "Nationality",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model class of the ‘Natural Person’"
      },
      "LegalPersonDto": {
        "type": "object",
        "properties": {
          "idNo": {
            "type": "string",
            "description": "Debtor Id of 'Organization'",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Organization name",
            "nullable": true
          },
          "organizationType": {
            "type": "string",
            "description": "Organization type",
            "nullable": true
          },
          "organization": {
            "type": "integer",
            "description": "Organization",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Organization model class"
      },
      "PostalAddressRole": {
        "enum": [
          "main",
          "alternate",
          "multipleAddress"
        ],
        "type": "string",
        "description": "Type of Postal Address:"
      },
      "PostalAddressDto": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/PostalAddressRole"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "description": "Address line1",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "description": "Address line2",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "description": "Address line3",
            "nullable": true
          },
          "addressLine4": {
            "type": "string",
            "description": "Address line4",
            "nullable": true
          },
          "streetNo": {
            "type": "string",
            "description": "Street number",
            "nullable": true
          },
          "flatNo": {
            "type": "string",
            "description": "Flat number",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Zip code",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "wrongAddress": {
            "type": "boolean",
            "description": "Status of the 'Wrong address'",
            "nullable": true
          },
          "wrongAddressDate": {
            "type": "string",
            "description": "Date on which the ‘Wrong address’ was provided",
            "format": "date-time",
            "nullable": true
          },
          "addressProtected": {
            "type": "boolean",
            "description": "Status of the 'Protected address'",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "Region",
            "nullable": true
          },
          "zipCodeExtension": {
            "type": "string",
            "description": "Zip code extension",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Postal address of the 'Person'"
      },
      "MediumDto": {
        "enum": [
          "phone",
          "fax",
          "email"
        ],
        "type": "string",
        "description": "Type of contact medium:"
      },
      "ContactPointRoleDto": {
        "enum": [
          "priv",
          "work",
          "extPriv",
          "alt"
        ],
        "type": "string",
        "description": "Type of contact role:"
      },
      "ContactPointDto": {
        "type": "object",
        "properties": {
          "medium": {
            "$ref": "#/components/schemas/MediumDto"
          },
          "id": {
            "type": "string",
            "description": "Value of the contact point",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/ContactPointRoleDto"
          }
        },
        "additionalProperties": false,
        "description": "Contact point of the 'Person'"
      },
      "ContactPreferencesDto": {
        "type": "object",
        "properties": {
          "doNotCall": {
            "type": "boolean",
            "description": "'Do not Call' status",
            "nullable": true
          },
          "doNotCallDate": {
            "type": "string",
            "description": "Date on which the ‘Do not call’ was selected",
            "format": "date-time",
            "nullable": true
          },
          "emailOk": {
            "type": "boolean",
            "description": "Is the email Id correct?",
            "nullable": true
          },
          "emailOkDate": {
            "type": "string",
            "description": "Date on which the email Id was confirmed",
            "format": "date-time",
            "nullable": true
          },
          "wrongPhone": {
            "type": "boolean",
            "description": "Is the phone number incorrect?",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegistrationDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date on which the Debtor was registered in Nova",
            "format": "date-time",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "User name of the collector",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Registration details of the 'Person'"
      },
      "StatisticsCategory": {
        "enum": [
          "legal"
        ],
        "type": "string",
        "description": "Type of Statistics Category:"
      },
      "StatisticsName": {
        "enum": [
          "noOfInjunction",
          "noOfDistress"
        ],
        "type": "string",
        "description": "Type of Statistics Name:"
      },
      "StatisticsDto": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/StatisticsCategory"
          },
          "name": {
            "$ref": "#/components/schemas/StatisticsName"
          },
          "value": {
            "type": "integer",
            "description": "Number of injunction or distress calls",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Number of injunction or distress calls made by  the 'Person'"
      },
      "LanguageCodeDto": {
        "enum": [
          "undefined",
          "bel",
          "dan",
          "eng",
          "fin",
          "fra",
          "ger",
          "irl",
          "ita",
          "nld",
          "nor",
          "pol",
          "prt",
          "rus",
          "spa",
          "swe",
          "tur",
          "cze",
          "hun",
          "est",
          "ltu",
          "lva",
          "sui",
          "aut",
          "esp",
          "slk"
        ],
        "type": "string",
        "description": "Language Code:"
      },
      "DebtorDto": {
        "type": "object",
        "properties": {
          "objectIdentifiers": {
            "$ref": "#/components/schemas/ObjectIdentifiersDto"
          },
          "partyType": {
            "$ref": "#/components/schemas/DebtorPartyTypeDto"
          },
          "naturalPerson": {
            "$ref": "#/components/schemas/NaturalPersonDto"
          },
          "legalPerson": {
            "$ref": "#/components/schemas/LegalPersonDto"
          },
          "postalAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostalAddressDto"
            },
            "description": "Postal addresses of the debtor",
            "nullable": true
          },
          "contactPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPointDto"
            },
            "description": "Contact points of the debtor",
            "nullable": true
          },
          "contactPreferences": {
            "$ref": "#/components/schemas/ContactPreferencesDto"
          },
          "registration": {
            "$ref": "#/components/schemas/RegistrationDto"
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsDto"
            },
            "description": "Statistics of the debtor",
            "nullable": true
          },
          "authorityCode": {
            "type": "string",
            "description": "Authority code of the debtor",
            "nullable": true
          },
          "languageCode": {
            "$ref": "#/components/schemas/LanguageCodeDto"
          }
        },
        "additionalProperties": false,
        "description": "Debtor model class"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}