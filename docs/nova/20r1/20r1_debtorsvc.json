{
  "openapi": "3.0.1",
  "info": {
    "title": "Nova Debtor Service",
    "description": "The debtor service can be used to fetch the debtor information and perform operations (create, update, and delete) on the debtor object. \r\n\r\nA debtor is a private person, firm or company for which outstanding debt is claimed. The term **person** and **firm** refers to a natural person and the term **company** refers to a legal person. A debtor object contains information such as contact details like address and phone, registration information, information about a natural person and legal person, statistics about injunctions and distress, etc. ",
    "version": "20.1.141.0"
  },
  "servers": [
    {
      "url": "/tieto/collection/debtorsvc"
    }
  ],
  "paths": {
    "/Debtors/{debtorNo}/coreinfo": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns the core information of a debtor for a specific debtor number.",
        "description": "[TCAPI-2.3]",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "402": {
            "description": "License is missing"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/idno/{debtorId}/coreinfo": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns the core information of all the matching debtors for a specific national identification number.",
        "description": "[TCAPI-2.4]",
        "parameters": [
          {
            "name": "debtorId",
            "in": "path",
            "description": "National identification number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "402": {
            "description": "License is missing"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/coreinfo/list": {
      "post": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns the core information of a debtor for multiple debtor numbers.",
        "description": "[TCAPI-2.5]",
        "requestBody": {
          "description": "Nova debtor numbers",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DebtorCoreInfoDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "402": {
            "description": "License is missing"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/Debtors/{debtorNo}/legalperson": {
      "get": {
        "tags": [
          "Debtors"
        ],
        "summary": "Returns information of the debtor type legal person for a specific debtor number",
        "description": "[TCAPI-2.6]",
        "parameters": [
          {
            "name": "debtorNo",
            "in": "path",
            "description": "Nova debtor number",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LegalPersonDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalPersonDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalPersonDTO"
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "402": {
            "description": "License is missing"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationDTO": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Object registration"
      },
      "ExternalIdentifierDTO": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "id2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "id3": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "id4": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Object references other than the Nova unique object identifier. Elements are described in context of the DTO being used."
      },
      "PersonTypeDTO": {
        "enum": [
          "naturalPerson",
          "legalPerson"
        ],
        "type": "string",
        "description": ""
      },
      "DebtorCoreInfoDTO": {
        "type": "object",
        "properties": {
          "registration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RegistrationDTO"
              }
            ],
            "description": "Debtor registration in Nova. Refer: Nova.DTO.Common.RegistrationDTO",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Nova debtor number.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "external": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalIdentifierDTO"
              }
            ],
            "description": "Refer: Nova.DTO.Common.Identifiers.ExternalIdentifierDTO",
            "nullable": true
          },
          "partyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonTypeDTO"
              }
            ],
            "description": "Refer: Nova.DTO.Common.Enums.PersonTypeDTO"
          }
        },
        "additionalProperties": false,
        "description": "Debtor core information."
      },
      "LegalPersonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identification number in Nova for objects e.g. debtor, creditor.",
            "format": "int32"
          },
          "idNo": {
            "type": "string",
            "description": "National identification number.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "organisationType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "organisation": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Party represented as a legal entity (e.g. company, organisation)"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}