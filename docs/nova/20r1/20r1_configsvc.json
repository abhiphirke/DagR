{
  "openapi": "3.0.1",
  "info": {
    "title": "Nova Configuration Service",
    "description": "The **Nova configuration service** enables configuring objects (SystemVariable,  TypeLists, etc. ) for performing various Nova Operations.\r\n",
    "version": "20.1.141.0"
  },
  "servers": [
    {
      "url": "/tieto/collection/configsvc"
    }
  ],
  "paths": {
    "/SystemVariables/defaultcountrycode": {
      "get": {
        "tags": [
          "SystemVariables"
        ],
        "summary": "Get default country code for current Nova enviornment",
        "description": "[TCAPI-10.4]",
        "responses": {
          "200": {
            "description": "Default country code",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/SystemVariables/{keyName}/value": {
      "get": {
        "tags": [
          "SystemVariables"
        ],
        "summary": "Get system variable",
        "description": "[TCAPI-10.3]",
        "parameters": [
          {
            "name": "keyName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return value/default value",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/TypeLists/{keyName}": {
      "get": {
        "tags": [
          "TypeLists"
        ],
        "summary": "Returns TypeList values for a specific category.",
        "description": "[TCAPI-10.2]",
        "parameters": [
          {
            "name": "keyName",
            "in": "path",
            "description": "Category name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeListDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeListDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeListDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "402": {
            "description": "License is missing"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    },
    "/TypeLists": {
      "get": {
        "tags": [
          "TypeLists"
        ],
        "summary": "Returns all TypeList values in Nova.",
        "description": "[TCAPI-10.1]",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeListDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeListDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TypeListDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "402": {
            "description": "License is missing"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TypeListDTO": {
        "type": "object",
        "properties": {
          "typeListNo": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "typeRowId": {
            "type": "integer",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "defaultText": {
            "type": "string",
            "nullable": true
          },
          "available": {
            "type": "integer",
            "format": "int32"
          },
          "subcategoryType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subcategory": {
            "type": "string",
            "nullable": true
          },
          "dataString": {
            "type": "string",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "Nova TypeList object"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}