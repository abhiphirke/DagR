{
  "openapi": "3.0.1",
  "info": {
    "title": "Creditor Service",
    "description": "Creditor Service to expose information related creditor.",
    "version": "20.1.0.0"
  },
  "servers": [
    {
      "url": "/tieto/collection/creditorsvc"
    }
  ],
  "paths": {
    "/Creditor/list": {
      "post": {
        "tags": [
          "Creditor"
        ],
        "summary": "Finds creditor using Nova creditor number",
        "requestBody": {
          "description": "Nova creditor number and dep no.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the core creditor information. (Nova.DTO.Creditor.CreditorDTO)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditorDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditorDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreditorDTO"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No records found"
          },
          "400": {
            "description": "Incorrect input parameters"
          },
          "401": {
            "description": "Unauthorized request"
          },
          "500": {
            "description": "The server encountered an error while processing the request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalIdentifierDTO": {
        "type": "object",
        "properties": {
          "id1": {
            "type": "integer",
            "description": "Id1",
            "format": "int32",
            "nullable": true
          },
          "id2": {
            "type": "integer",
            "description": "Id2",
            "format": "int32",
            "nullable": true
          },
          "id3": {
            "type": "string",
            "description": "Id3",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreditorDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identification number within Nova. This id should be used only for read and not for updating of information.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "additional": {
            "$ref": "#/components/schemas/AdditionalIdentifierDTO"
          }
        },
        "additionalProperties": false,
        "description": "Provides information about the creditor"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}